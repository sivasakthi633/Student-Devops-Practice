# =========================
# Spring Boot Deployment + Service (Kubernetes)
# =========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-spring-app-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-spring-app
  template:
    metadata:
      labels:
        app: my-spring-app
    spec:
      # Optional: initContainer to wait for MySQL if needed in K8s
      # initContainers:
      # - name: wait-for-mysql
      #   image: busybox:1.36
      #   command:
      #     - sh
      #     - -c
      #     - |
      #       until nc -z db 3306; do
      #         echo "Waiting for MySQL..."
      #         sleep 3
      #       done
      containers:
      - name: spring-app-container
        image: my-spring-app:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
          - name: SPRING_DATASOURCE_URL
            value: jdbc:mysql://db:3306/app_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
          - name: SPRING_DATASOURCE_USERNAME
            value: admin
          - name: SPRING_DATASOURCE_PASSWORD
            value: secret
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        # Optional: livenessProbe to automatically restart Pods if app hangs
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: my-spring-app-service
spec:
  type: LoadBalancer
  selector:
    app: my-spring-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
